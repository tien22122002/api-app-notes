// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_app_notes.Data;

#nullable disable

namespace api_app_notes.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api_app_notes.Model.Entity.Notes", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NoteId"));

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Day")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsPinned")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Pass")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Time")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Title")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("NoteId");

                    b.HasIndex("Email");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("api_app_notes.Model.Entity.UserClient", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("Name")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Phone")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Pin")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Email");

                    b.ToTable("UserClient");
                });

            modelBuilder.Entity("api_app_notes.Model.Entity.Notes", b =>
                {
                    b.HasOne("api_app_notes.Model.Entity.UserClient", "UserClient")
                        .WithMany("Notes")
                        .HasForeignKey("Email")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("UserClient");
                });

            modelBuilder.Entity("api_app_notes.Model.Entity.UserClient", b =>
                {
                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
